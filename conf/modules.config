/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: BCFTOOLS_VIEW {
        ext.args = { [ "",
            params.filter ? "-f PASS": "",
            "--output-type z"
        ].join(" ").trim() }
    }

    withName: GUNZIP {
        publishDir        = [
            //specify to avoid publishing, overwritten otherwise
            enabled: false
        ]
    }

    withName: PICARD_LIFTOVERVCF {
        publishDir = [
            [
                path: { "${params.outdir}/liftover/lifted/" },
                mode: params.publish_dir_mode,
                pattern: "*.lifted.vcf.gz"
            ],
            [
                path: { "${params.outdir}/liftover/unlifted/" },
                mode: params.publish_dir_mode,
                pattern: "*.unlifted.vcf.gz"
            ],
            [
                path: { "${params.outdir}/liftover/logs/" },
                mode: params.publish_dir_mode,
                pattern: "*.log"
            ]
        ]
    }

    withName: TABIX_TABIX {
        publishDir        = [
            //specify to avoid publishing, overwritten otherwise
            enabled: false
        ]
    }

    withName: UNTAR {
        publishDir        = [
            //specify to avoid publishing, overwritten otherwise
            enabled: false
        ]
    }

    withName: VCF2MAF {
        ext.args = { [ "",
            params.run_vep ? "" : "--inhibit-vep",
            meta.normal_id ? "--normal-id ${meta.normal_id} --vcf-normal-id ${meta.vcf_normal_id}" : "",
            meta.tumor_id  ? "--tumor-id ${meta.tumor_id} --vcf-tumor-id ${meta.vcf_tumor_id}"     : "",
            "--retain-info HGVSp_VEP,HGVSc_VEP,genename,codonpos,clinvar_hgvs,cds_strand,aaref,aaalt,aapos,VEP_canonical,MutPred_AAchange",
            "--retain-ann HGVSp_VEP,HGVSc_VEP,genename,codonpos,clinvar_hgvs,cds_strand,aaref,aaalt,aapos,VEP_canonical,MutPred_AAchange",
            "--retain-fmt HGVSp_VEP,HGVSc_VEP,genename,codonpos,clinvar_hgvs,cds_strand,aaref,aaalt,aapos,VEP_canonical,MutPred_AAchange ",
            "--any-allele",
            "--ncbi-build ${params.genome.tokenize('.')[-1]}",
            "--species homo_sapiens"
        ].join(" ").trim() }
        publishDir = [
            path: { "${params.outdir}/maf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
